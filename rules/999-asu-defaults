#!/bin/sh
# /rom/etc/uci-defaults/
# built.in -> package/base-files/files/etc/uci-defaults/
touch /root/.vimrc
i41p='i41p'
i61p='i61p'
m1m='m1m'
tables='fw4'
cat > /root/nft.init.0 << EXO
#!/bin/sh
set -e
set -o pipefail
case "\$1" in
	i4 )
		nft add element inet ${tables} ${i41p} {"\$2"}
		;;
	i6 )
		nft add element inet ${tables} ${i61p} {"\$2"}
		;;
	im )
		nft add element inet ${tables} ${m1m} {"\$2"}
		;;
	i4d )
		nft delete element inet ${tables} ${i41p} {"\$2"}
		;;
	i6d )
		nft delete element inet ${tables} ${i61p} {"\$2"}
		;;
	imd )
		nft delete element inet ${tables} ${m1m} {"\$2"}
		;;
	is )
		nft list set inet ${tables} ${i41p} | sed '1d;\$d' > /etc/nftables.d/i41p
		nft list set inet ${tables} ${i61p} | sed '1d;\$d' > /etc/nftables.d/i61p
		;;
	m )
		nft list set inet ${tables} ${m1m} | sed '1d;\$d' > /etc/nftables.d/m1m
		;;
esac
EXO

st2=$(dd if=/dev/urandom bs=1 count=1|hexdump -e '1 "%03x"')
st4=$(dd if=/dev/urandom bs=2 count=1|hexdump -e '1 "%04x"')
r16r=$((16+$RANDOM%16))
r255r=$((RANDOM%255))

if $(fw_printenv|grep -q 'model=RB03') && [[ -z $(uci get wireless.radio1.path 2>/dev/null) ]];then
	uci set wireless.radio0.path='platform/18000000.wmac'
	uci set wireless.radio1.path='1a143000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0'
	uci commit
fi
[[ $(uci get wireless.radio0.channel) = '1' ]] && {
	uci set wireless.radio0.channel=$((5+$RANDOM%5))
	uci set wireless.radio1.channel=$((153+$RANDOM%3*4))
	uci set wireless.radio0.htmode='HT40'
	uci set wireless.radio0.noscan='1'
	uci set wireless.radio1.disabled='0'
	uci set wireless.default_radio1.disabled='0'
	uci set wireless.default_radio0.disabled='1'
	uci commit
}
[[ $(uci get wireless.radio1.channel) = '1' ]] && {
	uci set wireless.radio1.channel=5
	uci set wireless.radio0.channel=153
	uci set wireless.radio1.htmode='HT40'
	uci set wireless.radio1.noscan='1'
	uci set wireless.radio0.disabled='0'
	uci set wireless.default_radio0.disabled='0'
	uci set wireless.default_radio1.disabled='1'
	uci commit
}
nl=25
uci batch << EEOO
set network.globals.packet_steering='2'
set network.globals.tcp_l3mdev='1'
set network.globals.udp_l3mdev='1'
set network.globals.steering_flows='128'
set dhcp.odhcpd.loglevel='1' #4
set dhcp.lan.limit="$nl"
set dhcp.@dnsmasq[0].dnsforwardmax="$((nl*10))"
set dhcp.@dnsmasq[0].cachesize="$((nl*10))"
set dhcp.lan.leasetime='1h'

set firewall.@defaults[0].synflood_protect='1'
set firewall.@defaults[0].flow_offloading='0'
set firewall.@defaults[0].flow_offloading_hw='0'
add_list firewall.@zone[1].network='wwan'

set system.@system[0].hostname="$st2"
set system.@system[0].timezone='HKT-8'
set system.@system[0].zonename='Asia/Hong Kong'
set system.ntp.enable_server='0'
set system.ntp.interface='lan'

set network.lan.ipaddr="172.${r16r}.${r255r}.1"

add_list dhcp.lan.dhcp_option='6,114.114.114.114'
set dhcp.wwan=dhcp
set dhcp.wwan.interface='wwan'
set dhcp.wwan.ignore='1'
set network.wwan=interface
set network.wwan.proto='dhcp'

set wireless.radio0.country='CN'
set wireless.radio1.country='CN'

set wireless.default_radio0.ssid="xiaomi-$st4"
set wireless.default_radio0.encryption='psk2+ccmp'
set wireless.default_radio0.key='12345678'

set wireless.default_radio1.ssid="redmi-$st4"
set wireless.default_radio1.encryption='psk2+ccmp'
set wireless.default_radio1.key='12345678'

commit
EEOO

touch /etc/dropbear/authorized_keys
pd="fe80::$(uci get network.lan.ipaddr)"
(echo $pd;sleep 1;echo $pd) | passwd > /dev/null

rm /etc/nftables.d/*
echo -e "set i41p {\n\ttype ipv4_addr\n\tflags interval\n}" > /etc/nftables.d/i41p
echo -e "set i61p {\n\ttype ipv6_addr\n\tflags interval\n}" > /etc/nftables.d/i61p
echo -e "set m1m {\n\ttype ether_addr\n\tflags interval\n}" > /etc/nftables.d/m1m

cat > /etc/nftables.d/u.nft << NFTC
include "/etc/nftables.d/i41p"
include "/etc/nftables.d/i61p"
include "/etc/nftables.d/m1m"
chain upi {
	type filter hook input priority -1; policy accept;
	ip saddr @${i41p} drop
	ip6 saddr @${i61p} drop
	ether saddr @${m1m} drop
}

chain upf {
	type filter hook forward priority -1; policy accept;
	ip daddr @${i41p} drop comment "drop ct state all"
	ip6 daddr @${i61p} drop
#	ip daddr {192.168.0.3} tcp dport {80,443} drop comment "drop ct state all"
#	ip daddr {192.168.0.3} tcp dport 22 limit rate 10/second log prefix "--- "
	ether saddr @${m1m} drop
}

chain upo {
	type filter hook output priority -1; policy accept;
}

chain udn {
	type nat hook prerouting priority dstnat; policy accept;
#	iifname "br-lan" ip daddr {192.168.1.2} tcp dport {80,443} dnat to $(uci get network.lan.ipaddr)
}

NFTC
exit 0 
