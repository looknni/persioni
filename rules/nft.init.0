#!/bin/sh
# $1,add|add6|del|del6 $2,ipaddr
if [[ "$1" == "add" || "$1" == "add6" || "$1" == "del" || "$1" == "del6" ]];then
	mdd='mccset' # local 'mddset'
	mangle='fw4' # local 'mangle
function list4(){
        nft list set inet $mangle $mdd
}
function list6(){
        nft list set inet $mangle "${mdd}6"
}
function add(){
	if [ "$1" == "add" ];then
        	nft add element inet $mangle $mdd {"$2"}
        	list4
fi
	if [ "$1" == "add6" ];then
        	nft add element inet $mangle "${mdd}6" {"$2"}
        	list6
fi

}
function del(){
	if [ "$1" == "del" ];then
        	nft delete element inet $mangle $mdd {"$2"}
        	list4
fi
	if [ "$1" == "del6" ];then
        	nft delete element inet $mangle "${mdd}6" {"$2"}
        	list6
fi
}
if [ "$1" == "add" ] || [ "$1" == "add6" ];then
	add $1 $2
fi
if [ "$1" == "del" ] || [ "$1" == "del6" ];then
	del $1 $2
fi
fi

if [ "$1" == "init" ];then

	nft flush ruleset
	na='prerouting'
	nb='input'
	nc='forward'
	nd='output'
	ne='postrouting'
	raw='raw'
	nat='nat'
	filter='filter'
	mangle='mangle'
	pa=-300
	pb=-100
	pc=0
	pd=-150

function nta(){
	nft add table inet $1
}
nta $raw
nta $nat
nta $filter
nta $mangle
function nch(){
	nft add chain inet $1 $2 { type $3 hook $4 priority $5 \; policy accept \; }
}
nch $raw $nd $filter $na $pa
nch $raw $ne $filter $na $pa

nch $nat $na $nat $na $pb
nch $nat $nb $nat $nb $pb
nch $nat $nd $nat $nd $pb
nch $nat $ne $nat $ne $pb

nch $filter $nb $filter $nb $pc
nch $filter $nc $filter $nc $pc
nch $filter $nd $filter $nd $pc

nch $mangle $na $filter $na $pd
nch $mangle $nb $filter $nb $pd
nch $mangle $nc $filter $nc $pd
nch $mangle $nd $filter $nd $pd
nch $mangle $ne $filter $ne $pd
function nchn(){
	nft add chain inet $1 $2
}
nchn $filter syn_flood
nft add rule inet $filter syn_flood limit rate 25/second burst 50 packets counter return comment "water"
nft add rule inet $filter syn_flood counter drop comment "drop_flood"
nchn $filter faa
nchn $filter fbb
nchn $filter fcc

nchn $mangle maa
nchn $mangle mbb
nchn $mangle mcc
nchn $mangle mdd
nchn $mangle mee
function nru(){
	nft add rule inet $1 $2 counter jump $3
}
nru $filter $nb faa
nru $filter $nc fbb
nru $filter $nd fcc

nru $mangle $na maa
nru $mangle $nb mbb
nru $mangle $nc mcc
nru $mangle $nd mdd
nru $mangle $ne mee

function nset(){
	nft add set inet ${1} ${2} { type ipv4_addr \;flags interval \; counter \; auto-merge \;}
	nft add set inet ${1} "${2}6" { type ipv6_addr \;flags interval \; counter \; auto-merge \;}
}
nset $mangle maaset
nset $mangle mbbset
nset $mangle mccset
nset $mangle mddset
nset $mangle meeset
nset $filter faaset
nset $filter fbbset
nset $filter fccset
function nsetru(){
	nft add rule inet ${1} ${2} ip daddr @${3} drop
	nft add rule inet ${1} ${2} ip6 daddr @"${3}6" drop
}
nsetru $mangle maa maaset
nsetru $mangle mbb mbbset
nsetru $mangle mcc mccset
nsetru $mangle mdd mddset
nsetru $mangle mee meeset
nsetru $filter faa faaset
nsetru $filter fbb fbbset
nsetru $filter fcc fccset
#function nmapmac(){
#	nft add map inet ${1} ${2} { type ether_addr : inet_proto \; flags interval \; counter \;}
#}
#nmapmac $mangle maamap
#nmapmac $mangle mbbmap
#nmapmac $mangle mccmap
#nmapmac $mangle mddmap
#nmapmac $mangle meemap
#function nmapmacru(){
#	nft add rule inet ${1} ${2} ether saddr map @${3} drop
#}
#nmapmacru $mangle maa maamap
#nmapmacru $mangle mbb mbbmap
#nmapmacru $mangle mcc mccmap
#nmapmacru $mangle mdd mddmap
#nmapmacru $mangle mee meemap
unset na nb nc nd ne raw nat filter mangle pa pb pc pd
nft list ruleset
fi
