#!/bin/sh

# iptables -nvL/-S/-F/-X/-Z [--line-numbers]
#iptables -t raw/mangle/nat/filter/security -A/-I/-D/-R PREROUTING/INPUT/FORWARD/OUTPUT/POSTROUTING 1..n { -m state/conntrack/limit/icmp/mac/multiport/recent/string/ttl/time/iprange  --state ESTABLISHED,RELATED,NEW,INVALID,UNTRACKED,SNAT,DNAT /--ctstate NEW /--limit 1/second /--icmp-type echo-request /--mac-source 00:11:22:33:44:55 /--dports 22,80 /--name badguy --rcheck --seconds 60 --hitcount 3 /--algo bm/kmp --string "blockme" /--ttl-lt 10 / --timestart 08:00 --timestop 18:00 --days Mon-Fri /--src-range 192.168.0.100-192.168.0.200 } -i/-o enp1s0 -p all/tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG /udp/icmp --icmp-type echo-request/echo-reply -s/-d 192.168.0.2/24 --sport/--dport 80 -j DROP/ACCEPT/REJECT/LOG/REDIRECT/DNAT/SNAT/MASQUERADE/FORWARD/MARK
#
# nft -a/-f list/flush ruleset | grep -Fx "rule"
# nft add rule raw prerouting ip saddr { ip1,ip2 } drop
# nft add rule filter input limit rate 10/second burst 20 packets

# nft export (xml | json)
# nft monitor [new | destroy] [tables | chains | sets | rules | elements] [xml | json]

# nft add table <family> <table>
# nft add chain ip/ip6/inet/arp/bridge/netdev <table> <chain> { type filter/nat/route/bridge/fip/arp hook prerouting/input/forward/output/postrouting [device <device>] priority NF_IP_PRI_CONNTRACK_DEFRAG (-400) / NF_IP_PRI_RAW (-300) / NF_IP_PRI_SELINUX_FIRST (-225) / NF_IP_PRI_CONNTRACK (-200) / NF_IP_PRI_MANGLE (-150) / NF_IP_PRI_NAT_DST (-100) / NF_IP_PRI_FILTER (0) / NF_IP_PRI_SECURITY (50) / NF_IP_PRI_NAT_SRC (100) / NF_IP_PRI_SELINUX_LAST (225) / NF_IP_PRI_CONNTRACK_HELPER (300); policy accept/drop/queue/continue/return/jump <chain>/goto <chain> ; }
